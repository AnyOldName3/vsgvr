name: Compile Check (Desktop)
on:
  push:
  pull_request:
env:
  CMakeVersion: 3.14.x
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        vsg-tag: [master, VulkanSceneGraph-1.0]
        build-shared: [ON]
        vulkan-version: [1.3.224.1]
          
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true

    - name: Setup cmake
      uses: jwlawson/actions-setup-cmake@v1.13
      with:
        cmake-version: ${{ env.CMakeVersion }}

    - name: Install Vulkan SDK
      uses: humbletim/install-vulkan-sdk@v1.1.1
      with:
        version: ${{ matrix.vulkan-version }}
        cache: true

    - name: Install Ninja
      uses: seanmiddleditch/gha-setup-ninja@master
      if: startsWith(matrix.os, 'windows')

    - name: Checkout vsg
      uses: actions/checkout@v3
      with:
        repository: vsg-dev/VulkanSceneGraph
        ref: ${{matrix.vsg-tag}}
        path: vsg
        submodules: true

    - name: Build and Install VSG
      shell: bash
      run: |
        if [ "$RUNNER_OS" == "Windows" ]; then
          cmake . -G "Ninja" -A x64 -DBUILD_SHARED_LIBS=${{matrix.build-shared}} -DCMAKE_INSTALL_PREFIX=../install
          cmake --build . --target install --config Release --parallel 4
        else
          cd vsg
          cmake . -DBUILD_SHARED_LIBS=${{matrix.build-shared}} -DCMAKE_INSTALL_PREFIX=../install
          cmake --build . --target install --config Release --parallel 4
        fi

    - name: Build and Install VSGVR
      shell: bash
      run: |
        if [ "$RUNNER_OS" == "Windows" ]; then
          cmake . -G "Ninja" -A x64 -DBUILD_SHARED_LIBS=${{matrix.build-shared}} -DCMAKE_INSTALL_PREFIX=../install
          cmake --build . --target install --config Release --parallel 4
        else
          cmake . -DBUILD_SHARED_LIBS=${{matrix.build-shared}} -DCMAKE_INSTALL_PREFIX=./install
          cmake --build . --target install --config Release --parallel 4
        fi
